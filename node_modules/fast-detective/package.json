{
  "name": "fast-detective",
  "description": "Find all calls to require() no matter how crazily nested using a proper walk of the AST",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/node-detective.git"
  },
  "main": "index.js",
  "keywords": [
    "require",
    "source",
    "analyze",
    "ast"
  ],
  "directories": {
    "lib": ".",
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "test": "expresso"
  },
  "dependencies": {
    "burrito": "0.2.x"
  },
  "devDependencies": {
    "expresso": "=0.7.x"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "license": "MIT",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "readme": "detective\n=========\n\nFind all calls to require() no matter how crazily nested using a proper walk of\nthe AST.\n\nexample\n=======\n\nstrings\n-------\n\nstrings_src.js:\n\n````javascript\nvar a = require('a');\nvar b = require('b');\nvar c = require('c');\n````\n\nstrings.js:\n\n````javascript\nvar detective = require('detective');\nvar fs = require('fs');\n\nvar src = fs.readFileSync(__dirname + '/strings_src.js');\nvar requires = detective(src);\nconsole.dir(requires);\n````\n\noutput:\n\n    $ node examples/strings.js\n    [ 'a', 'b', 'c' ]\n\nmethods\n=======\n\nvar detective = require('detective');\n\ndetective(src)\n--------------\n\nGive some source body `src`, return an array of all the require()s with string\narguments.\n\ndetective.find(src)\n-------------------\n\nGive some source body `src`, return an object with \"strings\" and \"expressions\"\narrays for each of the require() calls.\n\nThe \"expressions\" array will contain the stringified expressions.\n\ninstallation\n============\n\n    npm install detective\n",
  "readmeFilename": "README.markdown",
  "_id": "fast-detective@0.0.2",
  "_from": "fast-detective@*"
}

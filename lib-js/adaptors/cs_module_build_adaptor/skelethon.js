// Generated by CoffeeScript 1.4.0
(function() {
  var SLUG_ASSETS_PATH, SPINE_ASSETS_PATH, camelize, expandPath, fs, path;

  path = require('path');

  fs = require('fs');

  SLUG_ASSETS_PATH = './cs_module_build_adaptor/slug_module';

  SPINE_ASSETS_PATH = './cs_module_build_adaptor/spine_app';

  camelize = function(str) {
    return str.replace(/-|_+(.)?/g, function(match, chr) {
      if (chr) {
        return chr.toUpperCase();
      } else {
        return '';
      }
    }).replace(/^(.)?/, function(match, chr) {
      if (chr) {
        return chr.toUpperCase();
      } else {
        return '';
      }
    });
  };

  expandPath = function(_path, dir) {
    if (path.basename(_path === _path)) {
      _path = dir + _path;
    }
    return path.normalize(_path);
  };

  exports.slugmodule = function(ctx_args) {
    var name, replace_dir_names, values, _path;
    name = ctx_args[1];
    if (!name) {
      throw "Need module name";
    }
    values = {
      name: path.basename(name)
    };
    _path = path.normalize(name);
    if (fs.existsSync(_path)) {
      throw _path + " already exists";
    }
    fs.mkdirSync(_path, 0x1fd);
    replace_dir_names = {
      'src': path.basename(name)
    };
    return {
      skelethon_path: SLUG_ASSETS_PATH,
      result_path: _path,
      values: values,
      replace_dir_names: replace_dir_names
    };
  };

  exports.spinecontroller = function() {
    var c_path, template, values;
    if (!name) {
      throw "Bad name `" + name + "`";
    }
    template = "" + SPINE_ASSETS_PATH + "/controller.coffee";
    values = {
      name: camelize(path.basename(name))
    };
    c_path = expandPath(name, "./app/controllers/") + ".coffee";
    return {
      skelethon_path: template,
      result_path: c_path,
      values: values
    };
  };

  exports.spinemodel = function(ctx_args) {
    var c_path, name, template, values;
    name = ctx_args[1];
    if (!name) {
      throw "Bad name `" + name + "`";
    }
    template = "" + SPINE_ASSETS_PATH + "/model.coffee";
    values = {
      name: camelize(path.basename(name))
    };
    c_path = expandPath(name, "./app/models/") + ".coffee";
    return {
      skelethon_path: template,
      result_path: c_path,
      values: values
    };
  };

  exports.spineapp = function(ctx_args) {
    var name, template, values, _path;
    name = ctx_args[1];
    if (!name) {
      throw "Bad name `" + name + "`";
    }
    template = "" + SPINE_ASSETS_PATH + "/app";
    values = {
      name: path.basename(name)
    };
    _path = path.normalize(name);
    if (fs.existsSync(_path)) {
      throw _path + " already exists";
    }
    fs.mkdirSync(_path, 0x1fd);
    return {
      skelethon_path: template,
      result_path: _path,
      values: values
    };
  };

}).call(this);

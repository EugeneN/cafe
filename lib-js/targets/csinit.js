// Generated by CoffeeScript 1.4.0
(function() {
  var DEFAULT_CS_BUILD_DIR, DEFAULT_CS_DIR, cafe_folder_path, check_paths, exists, get_paths, help, init_app, make_skelethon, make_target, path, validate_input_params, _ref;

  help = ["Initializes client side application structure.\nSets initial folders structure.\n\nParameters:\n    - app_root - base path for application compiling.\n    - js_path - path where result js will be stored."];

  path = require('path');

  make_target = require('../lib/target').make_target;

  make_skelethon = require('../lib/skelethon/skelethon').make_skelethon;

  exists = require('../lib/utils').exists;

  _ref = require('../defs'), DEFAULT_CS_DIR = _ref.DEFAULT_CS_DIR, DEFAULT_CS_BUILD_DIR = _ref.DEFAULT_CS_BUILD_DIR;

  cafe_folder_path = './assets/templates/cafe';

  check_paths = function(ctx, paths) {
    var map_f, red_f;
    map_f = function(p) {
      if (exists(p)) {
        return true;
      } else {
        ctx.fb.scream("path " + p + " is not exists");
        return false;
      }
    };
    red_f = function(a, b) {
      return a && b;
    };
    return paths.map(map_f).reduce(red_f);
  };

  get_paths = function(ctx) {
    return [ctx.own_args.app_root, ctx.own_args.js_path];
  };

  validate_input_params = function(ctx) {
    var app_root, js_path, result, _ref1;
    _ref1 = ctx.own_args, app_root = _ref1.app_root, js_path = _ref1.js_path;
    result = true;
    if (!app_root) {
      ctx.fb.scream("app root is not set");
      result = false;
    }
    if (!js_path) {
      ctx.fb.scream("js_path is not set");
      result = false;
    }
    return result;
  };

  init_app = function(ctx, cb) {
    ctx.fb.say("Creating new client side application");
    if (!(validate_input_params(ctx))) {
      if (typeof cb === "function") {
        cb('stop');
      }
    }
    if (!(check_paths(ctx, get_paths(ctx)))) {
      if (typeof cb === "function") {
        cb('stop');
      }
    }
    make_skelethon({
      skelethon_path: path.resolve(cafe_folder_path),
      result_path: './',
      fb: ctx.fb
    });
    return typeof cb === "function" ? cb('stop') : void 0;
  };

  module.exports = make_target("csinit", init_app, help);

}).call(this);

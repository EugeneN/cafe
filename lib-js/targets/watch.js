// Generated by CoffeeScript 1.4.0
(function() {
  var COFFEE_PATTERN, filter_dict, fs, help, is_debug_context, is_dir, make_target, path, say, scream, shout, watch, watcher, whisper, _ref, _ref1;

  help = ["Launches watcher that will continuously watch given directory\nfor any file modifications underneath and will run the `watch cycle`\non all such events.\n\nParameters:\n    - src  - argument will be automatically substituted for each `watch cycle`\n             with the path of the changed module if appropriate:\n\n    - skip - skip dir in src\n\n* Example:\n\n> cafe compile --src=uaprom/uaprom/cs minify --src=uaprom/uaprom/js watch\n      |                                                          |\n      |__________________ watch cycle ___________________________|\n\n\nParameters:\n    --src       - path to the direcory with cs modules for monitoring"];

  fs = require('fs');

  path = require('path');

  watcher = require('../lib/watcher');

  make_target = require('../lib/target').make_target;

  _ref = require('../lib/utils'), filter_dict = _ref.filter_dict, is_dir = _ref.is_dir, is_debug_context = _ref.is_debug_context;

  _ref1 = (require('../lib/logger'))("Watcher>"), say = _ref1.say, shout = _ref1.shout, scream = _ref1.scream, whisper = _ref1.whisper;

  COFFEE_PATTERN = require('../defs').COFFEE_PATTERN;

  watch = function(ctx, cb) {
    var watch_src, watcher_ctx;
    watch_src = ctx.own_args.src || ctx.full_args.src;
    if (!is_dir(watch_src)) {
      ctx.fb.scream("Missing '--src' parameter for the watch: '" + watch_src + "'");
      ctx.fb.scream("Eat help instead:\n");
      ctx.print_help();
    }
    watcher_ctx = {
      fb: ctx.fb,
      orig_ctx: ctx,
      cb: cb,
      watch_root: watch_src
    };
    return watcher.watch(Object.freeze(watcher_ctx));
  };

  module.exports = make_target("watch", watch, help);

}).call(this);

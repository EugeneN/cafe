// Generated by CoffeeScript 1.3.3
(function() {
  var CB_SUCCESS, path, stitch;

  stitch = new require('./stitch');

  CB_SUCCESS = require('../defs').CB_SUCCESS;

  path = require('path');

  exports.stitch_sources = function(files, cb) {
    "Accepts compiled files sources in two formats(single pair, or array):\n\n 1. ['filename', source]\n 2. [['filename', source], ['filename1', source1]]\n\nReturns stitched modules.";

    var Package, f, filename, fn, fn_without_ext, source, sources, _i, _len;
    Package = new stitch.Package({});
    sources = {};
    fn_without_ext = function(filename) {
      var ext_length;
      ext_length = (path.extname(filename)).length;
      return filename.slice(0, -ext_length);
    };
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      f = files[_i];
      if (f instanceof Array) {
        fn = f[0], source = f[1];
        filename = fn_without_ext(fn);
        sources[filename] = {
          filename: fn,
          source: source
        };
      } else {
        fn = files[0], source = files[1];
        filename = fn_without_ext(fn);
        sources[filename] = {
          filename: fn,
          source: source
        };
        break;
      }
    }
    return cb(CB_SUCCESS, Package.get_result_bundle(sources));
  };

}).call(this);

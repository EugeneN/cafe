// Generated by CoffeeScript 1.3.3
(function() {
  var make_compiler, p;

  p = require('path');

  make_compiler = function(compilers) {
    compilers || (compilers = []);
    return {
      validate_compiler: function(compiler) {
        return [compiler.hasOwnProperty('ext'), compiler.hasOwnProperty('compile')].reduce(a, b)(function() {
          return a && b;
        });
      },
      register_compiler_by_path: function(path) {
        "Registers compiler by filename.";

        var compiler;
        compiler = require(path);
        if (validate_compiler(compiler)) {
          return compilers.push(compiler);
        } else {
          throw "Compiler from path " + path + " must implement methods 'match' and 'compile'";
        }
      },
      register_compiler: function(compiler) {
        if (validate_compiler(compiler)) {
          return compilers.push(compiler);
        } else {
          throw "Compiler " + compiler + " must implement methods 'match' and 'compile'";
        }
      },
      compile: function(paths) {
        "@paths: list of paths for compilation.\nReturns:\n    {path, source}";

        var get_compiler;
        get_compiler = function(path, compilers) {
          var c, _i, _len;
          for (_i = 0, _len = compilers.length; _i < _len; _i++) {
            c = compilers[_i];
            if (c.ext === (p.exname(path)).slice(1)) {
              return c;
            }
          }
          throw "No compiler is registered for path " + p;
        };
        return paths.map(function(p) {
          return {
            path: p,
            source: get_compiler(p, compilers).compile(p)
          };
        });
      }
    };
  };

  module.exports = make_compiler;

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {
  var bootstrapper_file, fs, path, wrap_bundle, wrap_file, wrap_module, wrap_modules;

  fs = require('fs');

  path = require('path');

  bootstrapper_file = path.join(__dirname, './bootstrapper.js');

  wrap_bundle = function(source) {
    "@source: source code of bundle.";
    return [(fs.readFileSync(bootstrapper_file)).toString(), source].join('\n');
  };

  wrap_modules = function(modules) {
    "@moduels: list of dict with values {sources, ns}";

    var m;
    return ((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = modules.length; _i < _len; _i++) {
        m = modules[_i];
        _results.push(wrap_module(m.sources, m.ns));
      }
      return _results;
    })()).join('\n');
  };

  wrap_module = function(sources, ns) {
    "@sources: dict of key values filenames and source codes {filename, source}";

    var s;
    return [
      "require.define('" + ns + "', {", ((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = sources.length; _i < _len; _i++) {
          s = sources[_i];
          _results.push(wrap_file(s.source, s.filename, s.type));
        }
        return _results;
      })()).join(',\n'), "});\n\n"
    ].join('\n');
  };

  wrap_file = function(source, filename, type) {
    if (type === 'plainjs') {
      return source;
    } else {
      return ["'" + filename + "': function(exports, require, module) {(function() {", source, "}).call(this);}"].join('\n');
    }
  };

  module.exports = {
    wrap_bundle: wrap_bundle,
    wrap_module: wrap_module,
    wrap_modules: wrap_modules
  };

}).call(this);
